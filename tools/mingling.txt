
split -b 99MB -d --additional-suffix=.avi   sjsz2.7z   sjsz2=





aria2 ffmpeg  m3u8

codeblocks


isobuster
minitool
r-stduio
都叫兽
autospy
TheSleuth Kit

certutil -hashfile xxx MD5

dir /os

镜像提取



https://github.com/ywaby/keil2sdcc
sdcc
stcgal -b 9600
platformio
vscode
keil
minicom
stm32flash

openocd


linux通过uart烧写stm32
stcflash
51单片机寄存器
交叉编译
汇编
编译原理

【STM32开发环境】Linux下开发stm32（一） | 使用gcc-arm-none-eabi工具链编译

STM32高级开发(5)-gcc-arm-none-eabi


krusader
thunar
dolphin
pcmanfm

AMPL

dido

    （GlobalSearch） 全局搜索和（MultiStart）多起点方法产生若干起始点，然后它们用局部求解器去找到起始点吸引盆处的最优点。

    ga  遗传算法用一组起始点（称为种群），通过迭代从种群中产生更好的点，只要初始种群覆盖几个盆，GA就能检查几个盆。


    （simulannealbnd）模拟退火完成一个随机搜索，通常，模拟退火算法接受一个点，只要这个点比前面那个好，它也偶而接受一个比较糟的点，目的是转向不同的盆。

    （patternsearch ）模式搜索算法在接受一个点之前要看看其附近的一组点。假如附近的某些点属于不同的盆，模式搜索算法本质上时同时搜索若干个盆

   
   imsl
   nag
   POST   shuxueku
   bndsco
   astos 
   altos
   optlib
   snopt
   
   约束变尺度法，拟牛顿法，遗传算法，多目标优化算法，Hookjeeves算法等多种算法
   

MISER: a FORTRAN program

https://blog.csdn.net/qcxyliyong/article/details/103348632

https://coin-or.github.io/Ipopt/INSTALL.html

COIN-OR

plasma discover



CloneCD和IsoBuster

sudo apt install ttf-mscorefonts-installer
sudo fc-cache 

$ fc-match Arial # 查看Arial
$ fc-match Times # 查看Times New Roman




DeviceIoControl

PORT:18587
UUID:611aeb78-5d9d-4f19-b3cb-a63c2b60c61d

支持Shadowsocks，V2Ray和Trojan协议

sudo apt-get install qt5-default qttools5-dev-tools

sudo apt install qttools5-dev
sudo apt install  libprotobuf-dev
apt install protobuf-compiler-grpc 


git clone --branch zh-cn --depth 1 --single-branch https://github.com/huajh/awesome-latex-cv.git  <folder>
\\\
mellow 
https://github.com/mellow-io/mellow

npm i 

\\\\

matlab -nojvm -nosplash -nodesktop -r yourmfile

    1

（注意不加.m）。如果运行的m文件需要输入参数可以参考这一条输出:



cd Qv2ray
git submodule update --init 

mkdir build && cd build
cmake .. 
cmake --build . 
cmake --install . 

============

# 安装依赖
npm i

# 下载数据文件
npm run dlgeo

# 下载核心
# 默认只下载本系统对应的核心文件，如果要为其它系统构建，加 `-- --all` 下载其它系统对应的文件
npm run dlcore [-- --all]

# 运行
npm start

# 构建 macOS 安装文件
npm run distmac

# 构建 Windows 安装文件
npm run distwin

# 构建 Linux 安装文件
npm run distlinux


https://github.com/jiangxufeng/v2rayL

代理客户端
qv2ray
mellow
------------------
pgrep -l


Privoxy

自由浏览.apk
sakura frp
frp

Haproxy + keepalived 负载均衡日志定制

kcptun

分流：也许大家第一反应是 PAC，实际上无论是 Shadowsocks (特指 Shadowsocks-libev) 还是 V2Ray 本身不支持 PAC，都是客户端加进来的；Shadowsocks 的分流使用 ACL，V2Ray 使用自己实现的路由功能，孰优孰劣只是仁者智者的问题。

sudo systemctl  start  v2ray   #启动v2ray
sudo systemctl  status v2ray   #查看v2ray状态 
sudo systemctl  stop   v2ray   #停止v2ray



v2rayn
gitbook

falkon

samba
smbd

v2ray
rssradar
V2Ray 用户手册：

    https://www.v2ray.com

（已被墙）
https://v2fly.org
V2Ray 项目地址：https://github.com/v2ray/v2ray-core V2Ray Telegram 使用群链接：https://t.me/projectv2ray 


clash 代理客户端

设置内部端口映射
ngrok
nginx

sudo npm install -g ngrok --force --unsafe-perm=true --allow-root

pm2 start npm --watch --name <taskname> -- run <scriptname>;
pm2 list
pm2 show 'name|id'
pm2 monit
pm2 web
pm2 stop id
pm2 stop all
pm2 restart all
pm2 delete  all

sudo apt-get install sysv-rc-conf sysvconfig
添加启动项：

sysv-rc-conf apache2 on #代替 chkconfig apache2 enable


sudo chmod 777 -Rf qian


service --status-all
sudo sysv-rc-conf
sudo  systemctl daemon-reload
看启动服务
使用 insserv 设置自动启动

    添加服务

    sudo insserv /etc/init.d/aria2c #添加服务
    sudo insserv -r /etc/init.d/aria2c #删除服务


负载均衡

最 666 的功能来了～自动给你做负载均衡，只需要一条命令，以前那些复杂的概念懂不懂无所谓。

    pm2 start server.js -i (number|max)

# 开启三个进程运行项目
pm2 start app.js -i 3


    supervisor: 一般用作开发环境的使用。
    forever: 管理多个站点，一般每个站点的访问量不大的情况，不需要监控。
    PM2: 网站的访问量比较大，需要完整的监控页面。

pm2


CasADi

 POMDP/MDP planning


natapp
ngrok

mount -t cifs -o username=xxx,password=xxx //hostname/dir /mnt/tmp

pcmanfm
exa
tig
sudo apt-get install glances

axel

 sudo apt-get install default-jdk  openjdk

apt-get install libghc-gnutls-dev
pkg install -forge parallel

pkg install -forge struct
 
 apt install liboctave-dev

apt install octave-devel


pkg load parallel


sudo apt install octave-ga octave-io

sudo apt-get install octave-control octave-image octave-io octave-optim octave-signal octave-statistics
octave-struct


pkg load ga	`
pkg load optim

pkg install -forge io
pkg install -forge statistics
pkg install -forge optim


sudo openvpn --config xx.ovpn

zy player
h player
开源流媒体服务器
eazydarwin
ckplayer
live555

网页视频播放器

griffith 




yarn
yrm

yarn config set registry https://registry.npm.taobao.org --global
yarn config set disturl https://npm.taobao.org/dist --global
yarn config set sass_binary_site https://npm.taobao.org/mirrors/node-sass --global
yarn config set electron_mirror https://npm.taobao.org/mirrors/electron/ --global
yarn config set puppeteer_download_host https://npm.taobao.org/mirrors --global
yarn config set chromedriver_cdnurl https://npm.taobao.org/mirrors/chromedriver --global
yarn config set operadriver_cdnurl https://npm.taobao.org/mirrors/operadriver --global
yarn config set phantomjs_cdnurl https://npm.taobao.org/mirrors/phantomjs --global
yarn config set selenium_cdnurl https://npm.taobao.org/mirrors/selenium --global
yarn config set node_inspector_cdnurl https://npm.taobao.org/mirrors/node-inspector --global

yarn config set "chromedriver_cdnurl" "https://npm.taobao.org/mirrors/chromedriver"


yarn config set sass_binary_site http://cdn.npm.taobao.org/dist/node-sass -g
python2 只要把py2的环境变量置顶
step1 vue create ok

step2 vue ui 安装依赖  electron 


  step5 vue-cli-plugin-electron-builder 插件

electron-vue

npm remove
npm uninstall -g





default Electron icon is used reason=application icon is not set
icon
Windows (NSIS)
Optional icon.ico (Windows app icon) or icon.png. Icon size should be at least 256x256.
need to be placed in the build directory. It is important to provide icon.ico (or icon.png), otherwise default Electron icon will be used.
我们需要创建build文件夹，使用icon.ico 覆盖，也可以使用
directories.buildResources 修改资源文件夹
————————————————
版权声明：本文为CSDN博主「hellosnowyy」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。
原文链接：https://blog.csdn.net/u012212157/article/details/81173546


    electron-builder     

step3 移动electron在json 的位置
yarn add  https://github.com/electron-userland/electron-builder.git  --save-dev


step2 yarn add              @vue/cli-service  --save-dev


step3                        
 yarn add electron --save-dev
step4           改变 electron 位置                          yarn add electron-builder --save-dev

目测如此运行		vue-cli-service electron:build --windows 7z --x64


yarn global bin



npm uninstall -i xxx



step2 vue add electron-builder                                                                            step3 yarn add           global          @vue/cli-service              
vue ui


7z

nsis

chmod u+x 
   vue-cli-service electron:build --win --x64 -p always


@vue/cli-service 


step2 yarn add electron --save-dev
step3 yarn add electron-builder --save-dev




electron-builder 由于网络原因无法下载问题解决

    在package.json的build中添加electron的镜像

    "electronDownload": {
          "mirror": "https://npm.taobao.org/mirrors/electron/"
    }

如果还是下载不了相关的包，那么就下载二进制包放进缓存目录，各操作系统包的位置如下：

    macOS ~/Library/Caches/electron-builder
    linux ~/.cache/electron-builder
    windows %LOCALAPPDATA%\electron-builder\cache


npm run dist 



yarn add electron-builder --save-dev
cd mediaServer
./live555MediaServer


hls m3u8 rtsp

yarn config set registry https://registry.npm.taobao.org -g

yarn config set sass_binary_site http://cdn.npm.taobao.org/dist/node-sass -g
npm config set registry https://registry.npm.taobao.org/


sudo npm install -g @vue/cli
sudo npm install -g npm
sudo npm install -g vue-video-player 
sudo npm install -g videojs-contrib-hls

sudo npm install -g npm   vue-cli-plugin-electron-builder    -unsafe-perm=true --allow-root


yarn add electron-chromerdriver
 npm install -g nrm 

vue add @vue/typescript


npm install --global --production windows-build-tools

npm install -g @vue/cli-init

 conda create -n py27 python=2.7

执行后，就可以使用vue init webpack todolist 了

然后npm install

npm run dev

npm audit fix
npm audit fix --force

tsocks
  
tsocks on 
off
cnpm

yarn serve



yarn global add @vue/cli-init

    sudo npm install -g electron-forge
    不加sudo有时候会报权限错误

4、初始化项目

    electron-forge init yourprojectname --template=vue
    这一步比较耗时，最好科学上网或者更换国内npm镜像或者多试几遍

5、进入文件目录

    cd yourprojectname

6、启动项目

    electron-forge start 或者 npm start

作者：XY_Coder
链接：https://www.jianshu.com/p/48a7659e6b15
来源：简书
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。




electron

adminq@q4os-desktop:~$ sudo chown 0:0  /usr/lib/node_modules/electron/dist/chrome-sandbox
adminq@q4os-desktop:~$ sudo chmod 4755  /usr/lib/node_modules/electron/dist/chrome-sandbox

npm install chromedriver --chromedriver_cdnurl=http://cdn.npm.taobao.org/dist/chromedriver

使用 cnpm 安装亦可。

nrm
nrm ls
nrm use

motrix

sudo aria2c -c -x 16 -s 16 https://github.com/EasyDarwin/EasyDarwin/releases/download/v8.1.0/EasyDarwin-linux-8.1.0-1901141151.tar.gz

sudo yarn  add global electron-build

npm install yarn@latest -g


yarn global add electron

cdn


/etc/init.d/nginx

sudo apt install default-jre
sudo apt install default-jdk


chmod 777 -R /home/ftpqn/  #设置用户有上传权限

electron
vue
ts
electron-vue模板为例（打包使用electron-builder























zy player
h player
开源流媒体服务器
eazydarwin
ckplayer
live555

网页视频播放器

griffith 


cd mediaServer
./live555MediaServer


hls m3u8 rtsp

yarn config set registry https://registry.npm.taobao.org -g

yarn config set sass_binary_site http://cdn.npm.taobao.org/dist/node-sass -g
npm config set registry https://registry.npm.taobao.org/


sudo npm install -g @vue/cli
sudo npm install -g npm
sudo npm install -g vue-video-player 
sudo npm install -g videojs-contrib-hls

sudo npm install -g npm   vue-cli-plugin-electron-builder    -unsafe-perm=true --allow-root


yarn add electron-chromerdriver
 npm install -g nrm 

vue add @vue/typescript


npm install -g @vue/cli-init

执行后，就可以使用vue init webpack todolist 了

然后npm install

npm run dev
npm run build


yarn serve




    sudo npm install -g electron-forge
    不加sudo有时候会报权限错误

4、初始化项目

    electron-forge init yourprojectname --template=vue
    这一步比较耗时，最好科学上网或者更换国内npm镜像或者多试几遍

5、进入文件目录

    cd yourprojectname

6、启动项目

    electron-forge start 或者 npm start

作者：XY_Coder
链接：https://www.jianshu.com/p/48a7659e6b15
来源：简书
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。


yrm

nrm

electron

adminq@q4os-desktop:~$ sudo chown 0:0  /usr/lib/node_modules/electron/dist/chrome-sandbox
adminq@q4os-desktop:~$ sudo chmod 4755  /usr/lib/node_modules/electron/dist/chrome-sandbox

npm install chromedriver --chromedriver_cdnurl=http://cdn.npm.taobao.org/dist/chromedriver

使用 cnpm 安装亦可。

nrm
nrm ls
nrm use

motrix

sudo aria2c -c -x 16 -s 16 https://github.com/EasyDarwin/EasyDarwin/releases/download/v8.1.0/EasyDarwin-linux-8.1.0-1901141151.tar.gz


yrm


cdn


/etc/init.d/nginx

sudo apt install default-jre
sudo apt install default-jdk


chmod 777 -R /home/ftpqn/  #设置用户有上传权限

electron
vue
ts
electron-vue模板为例（打包使用electron-builder






sudo /etc/init.d/php7.3-fpm restart




    /etc/nginx/sites-available下的default文件

# Add index.php to the list if you are using PHP
index.php index index.html index.htm index.nginx-debian.html;

    1
    2

在server项中找到关于php的配置并启用

location ~ \.php$ {
                include snippets/fastcgi-php.conf;
                #With php7.0-cgi alone:
                #fastcgi_pass 127.0.0.1:9000;
                #With php7.0-fpm:

                fastcgi_pass unix:/run/php/php7.3-fpm.sock;
        } 





sudo /etc/init.d/php7.3-fpm restart




    /etc/nginx/sites-available下的default文件

# Add index.php to the list if you are using PHP
index.php index index.html index.htm index.nginx-debian.html;

    1
    2

在server项中找到关于php的配置并启用

location ~ \.php$ {
                include snippets/fastcgi-php.conf;
                #With php7.0-cgi alone:
                #fastcgi_pass 127.0.0.1:9000;
                #With php7.0-fpm:

                fastcgi_pass unix:/run/php/php7.3-fpm.sock;
        } 




polipo 
Twemproxy
haproxy
tsocks

安装Privoxy

sudo pacman -S privoxy
配置/etc/privoxy/config
比如我将socks5代理转化为http代理，我可以这样设置。

listen-address  localhost:8118
forward-socks5 / 127.0.0.1:1080 .

然后privoxy /etc/privoxy/config启动即可，这样本地端口的8118端口就是http代理端口。
除此之外privoxy还可以屏蔽网站、去广告等功能，诸位各自摸索罢。
设置Aria2代理

有些软件是不支持socks代理的，比如Aria2。
我们在启动Aria2的时候aria2c --all-proxy='http://127.0.0.1:8118' -D，就可以让Aria2走http代理了。

Aria2的其他设置 





aria2c -c -x 16 -s 16 -j 10 https://fs334.gounlimited.to/tea5uudfyl2qzxfffodyrndp67o5i2mblbscr6gp7urzrghi53e42fkpc4ha/v.mp4  --all-proxy="http://127.0.0.1:8118"  -D




https://uare.github.io/2016/download-with-proxy-by-command


curl

curl --proxy http://127.0.0.1:8123 www.google.com

　　注：curl 支持 socks 代理（–socks4/socks5）。
wget

# or set environment variable 
# export http_proy=http://127.0.0.1:8123
wget -e http_proxy=http://127.0.0.1:8123 $url

　　如果下载的链接为 https，则需要改为设置 https_proxy 。
aria2c

aria2c --http-proxy 'http://127.0.0.1' $url # or use --https-proxy

　　办法总是有的，只不过还是想要表达不满，这样无形提高了很多新技术的学习成本，普通人接触的新技术就更少了。


在 Linux 中，配置文件通常位于 /etc/v2ray/config.json 文件。运行 v2ray --config=/etc/v2ray/config.json，或使用 systemd 等工具把 V2Ray 作为服务在后台运行。

curl -v http://google.ca  -p 127.0.0.1:8118
v2ray -config
v2ray -test -config
产生大量的输出，最好使用下面的方法把它的输出重定向到某个文件中：
command  >  out.file  2>&1  &

HAProxy+Keepalived: 
systemctl status
systemctl list-units



1下载 free-ss.site json
2 v2ray 导出 json


config1.json
config2.json



有些程序需要先有网络才能顺利启动，可以采用官方的例子，调整启动顺序：

# Required-Start: $local_fs $network $remote_fs


insserv

#! /bin/sh
### BEGIN INIT INFO
# Provides:          xiazai
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: xiazai m3u8 mp4
# Description:       xiazai
### END INIT INFO




#启动v2ray 或 ssr 然后aria2 或者ffmpeg  下m3u8
#用 privoxy  socks 转 http

NAME=xiazai



NOWPID=$BASHPID

start()
{
sudo v2ray restart

cd /home/adminq/Videos

aria2c -c -x 16 -s 16 -j 10 https://fs334.gounlimited.to/tea5uudfyl2qzxfffodyrndp67o5i2mblbscr6gp7urzrghi53e42fkpc4ha/v.m                                                    p4  --all-proxy="http://127.0.0.1:8118"


}

case $1 in
start):
start
;;
stop):
echo "-----------------stop------------------"
echo $NOWPID
kill $NOWPID

;;
esac

synaptic
plasma discover








    然后，安装Armadillo

sudo apt-get install -y liblapack-dev
sudo apt-get install -y libblas-dev
sudo apt-get install -y libboost-dev
sudo apt-get install -y libopenblas-dev
sudo apt-get install -y liblapack-dev
sudo apt-get install -y libarpack2-dev
sudo apt-get install -y libsuperlu-dev
sudo apt-get install -y libarmadillo-dev

https://github.com/WarrenWeckesser/dde_solver
https://github.com/metrumresearchgroup/dde_solver
http://users.ox.ac.uk/~clme1073/python/PyDDE/





    Be sure the non-root user can get X working. Try running xterm.
    Run xauth list as the non-root user. You should see something like:

machinename/unix:14 MIT-MAGIC-COOKIE-1 058aexd13d0436b3463abd79acd31234

    Run echo $DISPLAY to see which number is used for this host. (eg localhost:14.0 means 14)
    Login as root. sudo -i
    Add the cookie. auth add machinename/unix:14 MIT-MAGIC-COOKIE-1 058aexd13d0436b3463abd79acd31234

    
    
    
    
    
    $sudo vim /etc/ssh/ssh_config

找到以下语句并编辑:

ForwardAgent yes
ForwardX11 yes
ForwardX11Trusted yes




